{"version":3,"sources":["components/shadowsControl/numshadowsSlice.js","components/opacityControl/alphasSlice.js","components/blurControl/blursSlice.js","components/vdistanceControl/vdistancesSlice.js","components/spreadControl/spreadSlice.js","utils/round.js","components/shadows/shadowsSelector.js","components/shadows/index.js","components/bezier/Line.js","components/bezier/Curve.js","components/bezier/LargeHandle.js","components/bezier/SmallHandle.js","components/bezier/index.js","components/ui/Toolbox.js","components/ui/InputSlider/index.js","components/blurControl/index.js","components/shadowsControl/index.js","components/ui/InputCheckbox/index.js","components/opacityControl/index.js","components/vdistanceControl/index.js","components/spreadControl/index.js","App.js","redux/store.js","reportWebVitals.js","index.js"],"names":["numshadowsSlice","createSlice","name","initialState","value","reducers","SET_NUM_SHADOWS","state","action","payload","actions","alphasSlice","startPoint","x","y","controlPointStart","controlPointEnd","endPoint","final","reverseAlphas","SET_ALPHA_CONTROL_POINTS","SET_FINAL_ALPHA","SET_REVERSE_ALPHAS","blursSlice","SET_BLUR_CONTROL_POINTS","SET_FINAL_BLUR","vdistancesSlice","SET_VDISTANCE_CONTROL_POINTS","SET_FINAL_VDISTANCE","spreadSlice","SET_SPREAD","Round","num","decimals","factor","Math","round","getAllShadows","createSelector","numshadows","alphas","p0","p1","p2","p3","finalAlpha","curve","Bezierjs","arr","i","point","get","push","blurs","finalBlur","vdistances","Bezier","spread","numShadows","allAlphas","allBlurs","allVdistances","styles","formatted","cloneAlphas","reverse","a","v","b","s","sf","endline","breakline","useStyles","makeStyles","boxStyles","props","alignItems","backgroundColor","bgcolor","borderRadius","color","display","flexDirection","fontFamily","justifyContent","lineHeight","marginTop","minHeight","width","minWidth","padding","whiteSpace","fontWeight","Shadows","classes","shadowBoxRef","useRef","shadows","useSelector","ref","className","dangerouslySetInnerHTML","__html","Line","from","to","strokeWidth","dash","x1","y1","x2","y2","stroke","strokeDasharray","defaultProps","Curve","instructions","d","fill","LargeHandle","coordinates","fillColor","onMouseDown","radi","strokeColor","cx","cy","rx","ry","style","cursor","SmallHandle","node","callback","curveColor","easing","finalValue","observers","viewBoxHeight","viewBoxWidth","easingControls","in","start","end","inout","initPointsState","draggingPointId","midPointLeft","midPointRight","midPointTop","midPointBottom","useState","points","setPoints","handleMouseDown","pointId","n","viewBox","onMouseMove","ev","clientX","clientY","svgRect","getBoundingClientRect","svgX","left","svgY","top","viewBoxX","viewBoxY","height","handleMouseMove","onMouseUp","overflow","root","marginBottom","header","label","counter","Toolbox","children","MySlider","withStyles","thumb","boxShadow","track","rail","Slider","InputSlider","min","max","step","onChange","event","val","BlurControl","dispatch","useDispatch","ShadowsControl","icon","outlineOffset","background","checkedIcon","backgroundImage","content","InputCheckbox","FormControlLabel","control","Checkbox","clsx","disableRipple","OpacityControl","finalOpacity","aria-label","e","target","checked","VdistanceControl","finalVdistance","SpreadControl","App","href","configureStore","reducer","alphasReducer","numshadowsReducer","vdistancesReducer","blursReducer","spreadReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.64e5983e.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const numshadowsSlice = createSlice({\n  name: 'numshadows',\n  initialState: {\n    value: 6,\n  },\n  reducers: {\n    SET_NUM_SHADOWS: (state, action) => {\n      state.value = action.payload\n    },\n  },\n})\n\nexport function totalNumShadowsSelector(state) {\n  return state.numshadows.value\n}\n\nexport const { SET_NUM_SHADOWS } = numshadowsSlice.actions\nexport default numshadowsSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { Bezier as Bezierjs } from 'bezier-js'\n\nexport const alphasSlice = createSlice({\n  name: 'alphas',\n  initialState: {\n    startPoint: { x: 1, y: 1 },\n    controlPointStart: { x: 0, y: 0 },\n    controlPointEnd: { x: 1, y: 1 },\n    endPoint: { x: 0, y: 0 },\n    final: 0.08,\n    reverseAlphas: false,\n  },\n  reducers: {\n    SET_ALPHA_CONTROL_POINTS: (state, action) => {\n      state.controlPointStart = {\n        x: action.payload.controlPointStart.x,\n        y: action.payload.controlPointStart.y,\n      }\n      state.controlPointEnd = {\n        x: action.payload.controlPointEnd.x,\n        y: action.payload.controlPointEnd.y,\n      }\n    },\n    SET_FINAL_ALPHA: (state, action) => {\n      state.final = action.payload\n    },\n    SET_REVERSE_ALPHAS: (state, action) => {\n      state.reverseAlphas = action.payload\n    },\n  },\n})\n\nexport function finalAlphaSelector(state) {\n  return state.alphas.final\n}\n\nexport function reverseAlphasSelector(state) {\n  return state.alphas.reverseAlphas\n}\n\nexport function allAlphasSelector(state) {\n  const {\n    startPoint: p0,\n    controlPointStart: p1,\n    controlPointEnd: p2,\n    endPoint: p3,\n    final: finalAlpha,\n  } = {\n    ...state.alphas,\n  }\n\n  const curve = new Bezierjs(p0.x, p0.y, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y)\n  let arr = []\n  const num = state.numshadows.value\n\n  for (let i = 1; i <= num; i++) {\n    // Get point on curve between (1/num) and 1\n    const point = curve.get(i / num)\n    arr.push((1 - point.y) * finalAlpha)\n  }\n  return arr\n}\n\nexport const {\n  SET_ALPHA_CONTROL_POINTS,\n  SET_FINAL_ALPHA,\n  SET_REVERSE_ALPHAS,\n} = alphasSlice.actions\n\nexport default alphasSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { Bezier as Bezierjs } from 'bezier-js'\n\nexport const blursSlice = createSlice({\n  name: 'blurs',\n  initialState: {\n    startPoint: { x: 1, y: 1 },\n    controlPointStart: { x: 0, y: 0 },\n    controlPointEnd: { x: 1, y: 1 },\n    endPoint: { x: 0, y: 0 },\n    final: 80,\n  },\n  reducers: {\n    SET_BLUR_CONTROL_POINTS: (state, action) => {\n      state.controlPointStart = {\n        x: action.payload.controlPointStart.x,\n        y: action.payload.controlPointStart.y,\n      }\n      state.controlPointEnd = {\n        x: action.payload.controlPointEnd.x,\n        y: action.payload.controlPointEnd.y,\n      }\n    },\n    SET_FINAL_BLUR: (state, action) => {\n      state.final = action.payload\n    },\n  },\n})\n\nexport function finalBlurSelector(state) {\n  return state.blurs.final\n}\n\nexport function allBlursSelector(state) {\n  const {\n    startPoint: p0,\n    controlPointStart: p1,\n    controlPointEnd: p2,\n    endPoint: p3,\n    final: finalBlur,\n  } = {\n    ...state.blurs,\n  }\n\n  const curve = new Bezierjs(p0.x, p0.y, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y)\n  let arr = []\n  const num = state.numshadows.value\n\n  for (let i = 1; i <= num; i++) {\n    // Get point on curve between (1/num) and 1\n    const point = curve.get(i / num)\n    arr.push((1 - point.y) * finalBlur)\n  }\n  return arr\n}\n\nexport const { SET_BLUR_CONTROL_POINTS, SET_FINAL_BLUR } = blursSlice.actions\nexport default blursSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { Bezier } from 'bezier-js'\n\nexport const vdistancesSlice = createSlice({\n  name: 'vdistances',\n  initialState: {\n    startPoint: { x: 1, y: 1 },\n    controlPointStart: { x: 0, y: 0 },\n    controlPointEnd: { x: 1, y: 1 },\n    endPoint: { x: 0, y: 0 },\n    final: 53,\n  },\n  reducers: {\n    SET_VDISTANCE_CONTROL_POINTS: (state, action) => {\n      state.controlPointStart = {\n        x: action.payload.controlPointStart.x,\n        y: action.payload.controlPointStart.y,\n      }\n      state.controlPointEnd = {\n        x: action.payload.controlPointEnd.x,\n        y: action.payload.controlPointEnd.y,\n      }\n    },\n    SET_FINAL_VDISTANCE: (state, action) => {\n      state.final = action.payload\n    },\n  },\n})\n\nexport function finalVdistanceSelector(state) {\n  return state.vdistances.final\n}\n\nexport function allVdistancesSelector(state) {\n  const {\n    startPoint: p0,\n    controlPointStart: p1,\n    controlPointEnd: p2,\n    endPoint: p3,\n    final: finalAlpha,\n  } = {\n    ...state.vdistances,\n  }\n\n  const curve = new Bezier(p0.x, p0.y, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y)\n  let arr = []\n  const num = state.numshadows.value\n\n  for (let i = 1; i <= num; i++) {\n    // Get point on curve between (1/num) and 1\n    const point = curve.get(i / num)\n    arr.push((1 - point.y) * finalAlpha)\n  }\n  return arr\n}\n\nexport const {\n  SET_VDISTANCE_CONTROL_POINTS,\n  SET_FINAL_VDISTANCE,\n} = vdistancesSlice.actions\nexport default vdistancesSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const spreadSlice = createSlice({\n  name: 'spread',\n  initialState: {\n    value: 0,\n  },\n  reducers: {\n    SET_SPREAD: (state, action) => {\n      state.value = action.payload\n    },\n  },\n})\n\nexport function spreadSelector(state) {\n  return state.spread.value\n}\n\nexport const { SET_SPREAD } = spreadSlice.actions\nexport default spreadSlice.reducer\n","const Round = (num, decimals) => {\n  let factor = 1\n  while (decimals) {\n    factor *= 10\n    decimals--\n  }\n\n  return Math.round(num * factor) / factor\n}\nexport default Round\n","import { createSelector } from '@reduxjs/toolkit'\nimport { totalNumShadowsSelector } from '../shadowsControl/numshadowsSlice'\nimport { allAlphasSelector } from '../opacityControl/alphasSlice'\nimport { reverseAlphasSelector } from '../opacityControl/alphasSlice'\nimport { allBlursSelector } from '../blurControl/blursSlice'\nimport { allVdistancesSelector } from '../vdistanceControl/vdistancesSlice'\nimport { spreadSelector } from '../spreadControl/spreadSlice'\nimport { round } from '../../utils'\n\nexport const getAllShadows = createSelector(\n  totalNumShadowsSelector,\n  allAlphasSelector,\n  reverseAlphasSelector,\n  allBlursSelector,\n  allVdistancesSelector,\n  spreadSelector,\n  (numShadows, allAlphas, reverseAlphas, allBlurs, allVdistances, spread) => {\n    let styles = ''\n    let formatted = ''\n    let cloneAlphas = [...allAlphas]\n\n    if (reverseAlphas) {\n      cloneAlphas.reverse()\n    }\n\n    for (let i = 0; i < numShadows; i++) {\n      const a = round(cloneAlphas[i], 3)\n      const v = round(allVdistances[i], 2)\n      const b = round(allBlurs[i], 2)\n      const s = spread ? ` ${spread}px` : ''\n      const sf = spread ? ` <span class=\"value\">${spread}px</span>` : ''\n      const endline = i === numShadows - 1 ? '' : ',\\n'\n      const breakline = i === numShadows - 1 ? '' : ',<br />'\n      styles += `0 ${v}px ${b}px${s} rgba(0, 0, 0, ${a})${endline}`\n      formatted += `&nbsp; &nbsp;0 <span class=\"value\">${v}</span>px <span class=\"value\">${b}</span>px${sf} rgba(0, 0, 0, <span class=\"value\">${a}</span>)${breakline}`\n    }\n\n    styles += ';'\n    formatted += ';'\n\n    return { styles, formatted }\n  }\n)\n","import React, { useRef } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useSelector } from 'react-redux'\nimport { getAllShadows } from './shadowsSelector'\n\nconst useStyles = makeStyles({\n  boxStyles: (props) => ({\n    alignItems: 'center',\n    backgroundColor: props.bgcolor,\n    borderRadius: '6px',\n    color: 'rgb(148, 166, 184)',\n    display: 'flex',\n    flexDirection: 'column',\n    fontFamily: \"'PT Mono', monospace\",\n    justifyContent: 'center',\n    lineHeight: '25px',\n    marginTop: '-14vh',\n    minHeight: '240px',\n    width: '40%',\n    minWidth: '200px',\n    padding: '1em 2em',\n    whiteSpace: 'pre',\n    '& .value': {\n      color: 'rgb(36, 109, 245)',\n      fontWeight: 'bold',\n    },\n  }),\n})\n\n/**\n The simple Div element that will receive the drop shadows\n */\nexport function Shadows(props) {\n  const classes = useStyles(props)\n  const shadowBoxRef = useRef(null)\n\n  const shadows = useSelector((state) => getAllShadows(state))\n\n  // useEffect(() => {\n  //   let layers = ''\n  //   let formattedLayers = ''\n  //   const clonedAlphas = [...alphas]\n\n  //   if (reversed) clonedAlphas.reverse()\n\n  //   for (let i = 0; i < numShadows; i++) {\n  //     const a = round(clonedAlphas[i], 3)\n  //     const v = round(vDistances[i], 2)\n  //     const b = round(blurs[i], 2)\n  //     const endline = i === numShadows - 1 ? '' : ',\\n'\n  //     layers += `0 ${v}px ${b}px rgba(0, 0, 0, ${a})${endline}`\n  //     formattedLayers += `0 <span>${v}</span>px <span>${b}</span>px rgba(0, 0, 0, <span>${a}</span>)${endline}`\n\n  //     setShadows(layers + ';')\n  //     setFormattedShadows(formattedLayers + ';')\n  //   }\n  // }, [numShadows, alphas, vDistances, blurs, reversed])\n\n  return (\n    <>\n      <style>\n        {`.shadows {\n          box-shadow: ${shadows.styles}\n        }`}\n      </style>\n\n      <div ref={shadowBoxRef} className={`${classes.boxStyles} shadows`}>\n        <p>\n          box-shadow:\n          <br />\n          <span dangerouslySetInnerHTML={{ __html: shadows.formatted }} />\n        </p>\n      </div>\n    </>\n  )\n}\n\nexport default Shadows\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Line = ({ from, to, color, strokeWidth, dash }) => (\n  <line\n    x1={from.x}\n    y1={from.y}\n    x2={to.x}\n    y2={to.y}\n    stroke={color}\n    strokeWidth={strokeWidth}\n    strokeDasharray={dash}\n  />\n)\n\nLine.defaultProps = {\n  color: '#cccccc',\n  strokeWidth: 1,\n}\n\nLine.propTypes = {\n  color: PropTypes.string,\n  strokeWidth: PropTypes.number,\n  from: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number,\n  }),\n  to: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number,\n  }),\n  dash: PropTypes.array,\n}\n\nexport default Line\n","const Curve = ({ color, instructions, strokeWidth }) => (\n  <path d={instructions} fill=\"none\" stroke={color} strokeWidth={strokeWidth} />\n)\n\nCurve.defaultProps = {\n  color: 'rgb(36, 109, 245)',\n  instructions: `\n  M 0, 0\n  C 25,50,75,50\n    100,0\n`,\n  strokeWidth: 2,\n}\n\nexport default Curve\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LargeHandle = ({\n  coordinates,\n  fillColor,\n  onMouseDown,\n  radi,\n  strokeColor,\n  strokeWidth,\n}) => (\n  <ellipse\n    cx={coordinates.x}\n    cy={coordinates.y}\n    rx={radi.x}\n    ry={radi.y}\n    fill={fillColor}\n    stroke={strokeColor}\n    strokeWidth={strokeWidth}\n    onMouseDown={onMouseDown}\n    style={{ cursor: '-webkit-grab' }}\n  />\n)\n\nLargeHandle.defaultProps = {\n  coordinates: { x: 4, y: 4 },\n  fillColor: 'white',\n  radi: { x: 4, y: 4 },\n  strokeColor: 'rgb(244, 0, 137)',\n  strokeWidth: 1,\n}\n\nLargeHandle.propTypes = {\n  coordinates: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number,\n  }),\n  fillColor: PropTypes.string,\n  onMouseDown: PropTypes.func,\n  radi: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number,\n  }),\n  strokeColor: PropTypes.string,\n  strokeWidth: PropTypes.number,\n}\n\nexport default LargeHandle\n","const SmallHandle = ({ coordinates, onMouseDown }) => (\n  <ellipse\n    cx={coordinates.x}\n    cy={coordinates.y}\n    rx={2}\n    ry={2}\n    fill=\"rgb(36, 109, 245)\"\n    strokeWidth={2}\n    onMouseDown={onMouseDown}\n  />\n)\n\nexport default SmallHandle\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Line from './Line'\nimport Curve from './Curve'\nimport LargeHandle from './LargeHandle'\nimport SmallHandle from './SmallHandle'\n\n/**\n * Simple cubic Bezier curve with control handles\n *\n * @param {*} { viewBoxWidth, viewBoxHeight, callback, easing }\n */\nconst Bezier = ({\n  callback,\n  curveColor,\n  easing,\n  finalValue,\n  observers,\n  strokeWidth,\n  viewBoxHeight,\n  viewBoxWidth,\n}) => {\n  // ----------------------------\n  // ENABLE BEZIER CURVE PRESETS\n  // ----------------------------\n\n  // const easings = [\"in\", \"inout\"];\n  // easing = easings.includes(easing) ? easing : \"inout\";\n  const easingControls = {\n    in: {\n      start: { x: viewBoxWidth * 0.75, y: viewBoxHeight * 0.9 },\n      end: { x: viewBoxWidth * 0.9, y: viewBoxHeight * 0.9 },\n    },\n    inout: {\n      start: { x: viewBoxWidth * 0.1225, y: viewBoxHeight * 0.5 },\n      end: { x: viewBoxWidth * 0.8775, y: viewBoxHeight * 0.5 },\n    },\n  }\n\n  // ------------------\n  // SET INITIAL STATE\n  // ------------------\n\n  // The initial SVG points\n  // plus the variable which will hold\n  // the ID of the point being dragged\n  const initPointsState = {\n    startPoint: { x: 0, y: viewBoxHeight },\n    endPoint: { x: viewBoxWidth, y: 0 },\n    controlPointStart: {\n      x: easingControls[easing].start.x,\n      y: easingControls[easing].start.y,\n    },\n    controlPointEnd: {\n      x: easingControls[easing].end.x,\n      y: easingControls[easing].end.y,\n    },\n    draggingPointId: null,\n    midPointLeft: { x: 0, y: viewBoxHeight / 2 },\n    midPointRight: { x: viewBoxWidth, y: viewBoxHeight / 2 },\n    midPointTop: { x: viewBoxWidth / 2, y: 0 },\n    midPointBottom: { x: viewBoxWidth / 2, y: viewBoxHeight },\n  }\n\n  // Set initial Bezier curve points\n  const [points, setPoints] = useState(initPointsState)\n\n  // The variable which will contain the\n  // reference to the SVG DOM element\n  let node\n\n  // The instructions for drawing the\n  // SVG in its initial state\n  const instructions = `\n  M ${points.startPoint.x},${points.startPoint.y}\n  C ${points.controlPointStart.x},${points.controlPointStart.y},${points.controlPointEnd.x},${points.controlPointEnd.y}\n    ${points.endPoint.x},${points.endPoint.y}\n`\n\n  /**\n   * Handler for the mousedown event\n   * @param {string} pointId  The reference to the selected point (not a DOM ID)\n   */\n  const handleMouseDown = (pointId) => {\n    setPoints({\n      ...points,\n      draggingPointId: pointId,\n    })\n  }\n\n  const handleMouseMove = ({ clientX, clientY }) => {\n    if (!points.draggingPointId) {\n      return\n    }\n\n    const svgRect = node.getBoundingClientRect()\n    const svgX = clientX - svgRect.left\n    const svgY = clientY - svgRect.top\n    const viewBoxX = (svgX * viewBoxWidth) / svgRect.width\n    const viewBoxY = (svgY * viewBoxHeight) / svgRect.height\n\n    setPoints({\n      ...points,\n      [points.draggingPointId]: { x: viewBoxX, y: viewBoxY },\n    })\n\n    callback({\n      controlPointStart: {\n        x: points.controlPointStart.x / viewBoxWidth,\n        y: points.controlPointStart.y / viewBoxHeight,\n      },\n      controlPointEnd: {\n        x: points.controlPointEnd.x / viewBoxWidth,\n        y: points.controlPointEnd.y / viewBoxHeight,\n      },\n    })\n  }\n\n  const handleMouseUp = () => {\n    setPoints({\n      ...points,\n      draggingPointId: null,\n    })\n  }\n\n  return (\n    <svg\n      ref={(n) => (node = n)}\n      viewBox={`0 0 ${viewBoxWidth} ${viewBoxHeight}`}\n      onMouseMove={(ev) => handleMouseMove(ev)}\n      onMouseUp={() => handleMouseUp()}\n      style={{\n        backgroundColor: 'white',\n        overflow: 'visible',\n        width: '100%',\n      }}\n    >\n      <Line\n        from={points.midPointLeft}\n        to={points.midPointRight}\n        strokeWidth={0.3}\n      />\n      <Line\n        from={points.midPointTop}\n        to={points.midPointBottom}\n        strokeWidth={0.3}\n      />\n      <Line\n        color=\"rgb(244, 0, 137)\"\n        dash={[3, 3]}\n        from={points.startPoint}\n        to={points.controlPointStart}\n      />\n      <Line\n        from={points.controlPointEnd}\n        to={points.endPoint}\n        color=\"rgb(244, 0, 137)\"\n        dash={[3, 3]}\n      />\n      <Curve\n        instructions={instructions}\n        strokeWidth={strokeWidth}\n        color={curveColor}\n      />\n      <SmallHandle coordinates={points.startPoint} />\n      <SmallHandle coordinates={points.endPoint} />\n      <LargeHandle\n        coordinates={points.controlPointStart}\n        onMouseDown={() => handleMouseDown('controlPointStart')}\n        radi={{ x: 3, y: 3 }}\n      />\n      <LargeHandle\n        coordinates={points.controlPointEnd}\n        onMouseDown={() => handleMouseDown('controlPointEnd')}\n        radi={{ x: 3, y: 3 }}\n      />\n    </svg>\n  )\n}\n\nBezier.propTypes = {\n  /**\n   * What easing type will be show on init\n   */\n  easing: PropTypes.oneOf(['inout', 'in']),\n  /**\n   * The width of the SVG Viewbox\n   */\n  viewBoxWidth: PropTypes.number,\n  /**\n   * The height of the SVG Viewbox\n   */\n  viewBoxHeight: PropTypes.number,\n  /**\n   * The callback function called when the\n   * SVG control points are moved\n   */\n  callback: PropTypes.func,\n  /**\n   * The number of points to observe on\n   * the curve\n   */\n  observers: PropTypes.number,\n}\n\nBezier.defaultProps = {\n  curveColor: 'rgb(36, 109, 245)',\n  easing: 'inout',\n  viewBoxWidth: 400,\n  viewBoxHeight: 100,\n  strokeWidth: 2,\n}\n\nexport default Bezier\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: 'rgb(223, 230, 238)',\n    borderRadius: '4px',\n    color: 'rgb(49, 63, 78)',\n    padding: '20px',\n    marginBottom: '1em',\n  },\n  header: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: '1em',\n  },\n  label: {},\n  counter: {\n    backgroundColor: 'white',\n    borderRadius: '3px',\n    padding: '4px',\n  },\n})\n\nconst Toolbox = ({ label, counter, children }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <header className={classes.header}>\n        <div className={classes.label}>{label || ''}</div>\n        {counter && <div className={classes.counter}>{counter}</div>}\n      </header>\n      <main>{children}</main>\n    </div>\n  )\n}\n\nexport default Toolbox\n","import React from 'react'\nimport Slider from '@material-ui/core/Slider'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst MySlider = withStyles({\n  root: {\n    color: 'rgb(36, 109, 245)',\n    height: 6,\n    marginBottom: '1em',\n  },\n  thumb: {\n    backgroundColor: 'white',\n    boxShadow: '0 1px 3px rgba(0, 0, 0, 0.3)',\n    height: 18,\n    width: 18,\n    marginTop: -6,\n  },\n  track: {\n    height: 6,\n    borderRadius: 3,\n  },\n  rail: {\n    height: 6,\n    borderRadius: 3,\n  },\n})(Slider)\n\nconst InputSlider = ({ min, max, callback, value, step }) => {\n  const handleChange = (event, val) => {\n    callback(val)\n  }\n\n  return (\n    <MySlider\n      onChange={handleChange}\n      value={value}\n      max={max}\n      min={min}\n      step={step}\n    />\n  )\n}\n\nInputSlider.defaultProps = {\n  max: 100,\n  min: 0,\n}\n\nexport default InputSlider\n","import React from 'react'\nimport Bezier from '../bezier'\nimport Toolbox from '../ui/Toolbox'\nimport InputSlider from '../ui/InputSlider'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { SET_FINAL_BLUR, SET_BLUR_CONTROL_POINTS } from './blursSlice'\n\nexport function BlurControl() {\n  const finalBlur = useSelector((state) => state.blurs.final)\n  const numShadows = useSelector((state) => state.numshadows.value)\n  const dispatch = useDispatch()\n\n  return (\n    <Toolbox label=\"Final blur strength\" counter={`${finalBlur}px`}>\n      <InputSlider\n        callback={(num) => dispatch(SET_FINAL_BLUR(num))}\n        value={finalBlur}\n        min={0}\n        max={500}\n      />\n      <Bezier\n        callback={(points) => dispatch(SET_BLUR_CONTROL_POINTS(points))} //{setBlurs}\n        easing=\"in\"\n        finalValue={finalBlur}\n        observers={numShadows}\n        strokeWidth={1.5}\n        viewBoxHeight={50}\n        viewBoxWidth={200}\n      />\n    </Toolbox>\n  )\n}\nexport default BlurControl\n","import React from 'react'\nimport Toolbox from '../ui/Toolbox'\nimport InputSlider from '../ui/InputSlider'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { SET_NUM_SHADOWS } from './numshadowsSlice'\n\nexport function ShadowsControl() {\n  const numShadows = useSelector((state) => state.numshadows.value)\n  const dispatch = useDispatch()\n\n  return (\n    <Toolbox label=\"Shadows number\" counter={numShadows}>\n      <InputSlider\n        callback={(num) => dispatch(SET_NUM_SHADOWS(num))}\n        value={numShadows}\n        max={10}\n        min={1}\n      />\n    </Toolbox>\n  )\n}\n\nexport default ShadowsControl\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nconst useStyles = makeStyles({\n  root: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n  icon: {\n    borderRadius: 3,\n    width: 16,\n    height: 16,\n    // boxShadow:\n    //   \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\n    backgroundColor: 'rgb(255, 255, 255)',\n    '$root.Mui-focusVisible &': {\n      // outline: \"1px auto rgba(255, 255, 255, 0.3)\",\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n      background: 'rgb(255, 255, 255)',\n      boxShadow:\n        'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: 'rgb(36, 109, 245)',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage:\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: 'rgb(86, 159, 255)',\n    },\n  },\n})\n\nconst InputCheckbox = (props) => {\n  const classes = useStyles()\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox\n          checkedIcon={\n            <span className={clsx(classes.icon, classes.checkedIcon)} />\n          }\n          className={classes.root}\n          color=\"default\"\n          disableRipple\n          icon={<span className={classes.icon} />}\n          {...props}\n        />\n      }\n      label={props.label}\n    />\n  )\n}\n\nInputCheckbox.propTypes = {\n  ariaLabel: PropTypes.string,\n  callback: PropTypes.func,\n  color: PropTypes.string,\n  label: PropTypes.string,\n}\n\nexport default InputCheckbox\n","import React from 'react'\nimport Toolbox from '../ui/Toolbox'\nimport InputSlider from '../ui/InputSlider'\nimport InputCheckbox from '../ui/InputCheckbox'\nimport Bezier from '../bezier'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  SET_FINAL_ALPHA,\n  SET_ALPHA_CONTROL_POINTS,\n  SET_REVERSE_ALPHAS,\n} from './alphasSlice'\n\nexport function OpacityControl() {\n  const finalOpacity = useSelector((state) => state.alphas.final)\n  const numShadows = useSelector((state) => state.numshadows.value)\n  const dispatch = useDispatch()\n\n  return (\n    <Toolbox label=\"Final opacity\" counter={`${finalOpacity}`}>\n      <InputSlider\n        callback={(num) => dispatch(SET_FINAL_ALPHA(num))}\n        max={1}\n        step={0.01}\n        min={0}\n        value={finalOpacity}\n      />\n      <Bezier\n        callback={(points) => dispatch(SET_ALPHA_CONTROL_POINTS(points))}\n        easing=\"inout\"\n        finalValue={finalOpacity}\n        observers={numShadows}\n        strokeWidth={1.5}\n        viewBoxHeight={40}\n        viewBoxWidth={200}\n      />\n      <InputCheckbox\n        aria-label=\"Checkbox reverse opacity\"\n        label=\"Reverse opacity\"\n        onChange={(e) => dispatch(SET_REVERSE_ALPHAS(e.target.checked))}\n      />\n    </Toolbox>\n  )\n}\n\nexport default OpacityControl\n","import React from 'react'\nimport Toolbox from '../ui/Toolbox'\nimport InputSlider from '../ui/InputSlider'\nimport Bezier from '../bezier'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  SET_FINAL_VDISTANCE,\n  SET_VDISTANCE_CONTROL_POINTS,\n} from './vdistancesSlice'\n\nexport function VdistanceControl() {\n  const finalVdistance = useSelector((state) => state.vdistances.final)\n  const numShadows = useSelector((state) => state.numshadows.value)\n  const dispatch = useDispatch()\n  return (\n    <Toolbox label=\"Vertical distance\" counter={`${finalVdistance}px`}>\n      <InputSlider\n        callback={(num) => dispatch(SET_FINAL_VDISTANCE(num))}\n        value={finalVdistance}\n        min={0}\n        max={500}\n      />\n      <Bezier\n        callback={(points) => dispatch(SET_VDISTANCE_CONTROL_POINTS(points))}\n        easing=\"in\"\n        finalValue={finalVdistance}\n        observers={numShadows}\n        strokeWidth={1.5}\n        viewBoxHeight={50}\n        viewBoxWidth={200}\n      />\n    </Toolbox>\n  )\n}\n\nexport default VdistanceControl\n","import React from 'react'\nimport Toolbox from '../ui/Toolbox'\nimport InputSlider from '../ui/InputSlider'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { SET_SPREAD } from './spreadSlice'\n\nexport function SpreadControl() {\n  const spread = useSelector((state) => state.spread.value)\n  const dispatch = useDispatch()\n\n  return (\n    <Toolbox label=\"Reduce spread\" counter={`${spread}px`}>\n      <InputSlider\n        callback={(num) => dispatch(SET_SPREAD(num))}\n        value={spread}\n        max={0}\n        min={-100}\n      />\n    </Toolbox>\n  )\n}\n\nexport default SpreadControl\n","import React from 'react'\nimport Shadows from './components/shadows'\nimport BlurControl from './components/blurControl'\nimport ShadowsControl from './components/shadowsControl'\nimport OpacityControl from './components/opacityControl'\nimport VdistanceControl from './components/vdistanceControl'\nimport SpreadControl from './components/spreadControl'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport './App.css'\n\nexport function App() {\n  return (\n    <div className=\"wrapper\">\n      <main>\n        <div className=\"intro\">\n          <p>Smooth Shadow Generator</p>\n          <p>\n            A shameless exercise, reengineering{' '}\n            <a href=\"https://brumm.af/shadows\">brumm.af's original</a>.{' '}\n          </p>\n          <p>\n            <a href=\"https://github.com/TheRegge/react-smooth-shadows\">\n              <GitHubIcon />\n            </a>\n          </p>\n        </div>\n        <Shadows bgcolor=\"white\" />\n      </main>\n      <aside>\n        <div className=\"scroll\">\n          <ShadowsControl />\n          <OpacityControl />\n          <VdistanceControl />\n          <BlurControl />\n          <SpreadControl />\n        </div>\n      </aside>\n    </div>\n  )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\nimport numshadowsReducer from '../components/shadowsControl/numshadowsSlice'\nimport alphasReducer from '../components/opacityControl/alphasSlice'\nimport vdistancesReducer from '../components/vdistanceControl/vdistancesSlice'\nimport blursReducer from '../components/blurControl/blursSlice'\nimport spreadReducer from '../components/spreadControl/spreadSlice'\n\nexport default configureStore({\n  reducer: {\n    alphas: alphasReducer,\n    numshadows: numshadowsReducer,\n    vdistances: vdistancesReducer,\n    blurs: blursReducer,\n    spread: spreadReducer,\n  },\n})\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}